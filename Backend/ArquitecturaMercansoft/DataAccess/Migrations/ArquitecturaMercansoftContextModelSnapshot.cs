// <auto-generated />
using System;
using DataAccess.ModeloDatosCodeFirst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ArquitecturaMercansoftContext))]
    partial class ArquitecturaMercansoftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CLI_ID_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("CLI_ACTIVO");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit")
                        .HasColumnName("CLI_ELIMINADO");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLI_IDENTIFICACION");

                    b.Property<string>("Nombre")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("CLI_NOMBRE");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("CLI_TIPO_IDENTIFICACION");

                    b.HasKey("IdCliente")
                        .HasName("CLI_ID_CLIENTE");

                    b.ToTable("MER_TBL_CLIENTE");
                });

            modelBuilder.Entity("DataAccess.Entities.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("FAC_ACTIVO");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("FAC_CLIENTE_ID");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit")
                        .HasColumnName("FAC_ELIMINADO");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2")
                        .HasColumnName("FAC_FECHA_FACTURA")
                        .HasComment("FECHA INICIAL DE LA FACTURA");

                    b.HasKey("IdFactura")
                        .HasName("FAC_ID_FACTURA");

                    b.HasIndex("ClienteId");

                    b.ToTable("MER_TBL_FACTURA");
                });

            modelBuilder.Entity("DataAccess.Entities.Orden", b =>
                {
                    b.Property<int>("FacturaId")
                        .HasColumnType("int")
                        .HasColumnName("ORD_FACTURA_ID");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ORD_PRODUCTO_ID");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("ORD_ACTIVO");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit")
                        .HasColumnName("ORD_ELIMINADO");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float")
                        .HasColumnName("ORD_VALOR_TOTAL")
                        .HasComment("VALOR TOTAL DE LA ORDEN");

                    b.HasKey("FacturaId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("MER_TBL_ORDEN");
                });

            modelBuilder.Entity("DataAccess.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRO_ID_PRODUCTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("PRO_ACTIVO");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit")
                        .HasColumnName("PRO_ELIMINADO");

                    b.Property<string>("Nombre")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("PRO_NOMBRE");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("PRO_PRECIO");

                    b.HasKey("IdProducto")
                        .HasName("PRO_ID_PRODUCTO");

                    b.ToTable("MER_TBL_PRODUCTO");
                });

            modelBuilder.Entity("DataAccess.Entities.Factura", b =>
                {
                    b.HasOne("DataAccess.Entities.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_CLI_FAC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DataAccess.Entities.Orden", b =>
                {
                    b.HasOne("DataAccess.Entities.Factura", "Factura")
                        .WithMany("Ordenes")
                        .HasForeignKey("FacturaId")
                        .HasConstraintName("FK_ORD_FAC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Producto", "Producto")
                        .WithMany("Ordenes")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK_ORD_PRO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DataAccess.Entities.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("DataAccess.Entities.Factura", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("DataAccess.Entities.Producto", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
